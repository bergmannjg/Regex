{
  "test": [
    {
      "haystack": "",
      "matches": [],
      "name": "wb1",
      "regex": "\\b",
      "unicode": false
    },
    {
      "haystack": "a",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ]
      ],
      "name": "wb2",
      "regex": "\\b",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          0,
          0
        ],
        [
          2,
          2
        ]
      ],
      "name": "wb3",
      "regex": "\\b",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "wb4",
      "regex": "^\\b",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "wb5",
      "regex": "\\b$",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [],
      "name": "wb6",
      "regex": "^\\b$",
      "unicode": false
    },
    {
      "haystack": "nobar bar foo bar",
      "matches": [
        [
          6,
          9
        ],
        [
          14,
          17
        ]
      ],
      "name": "wb7",
      "regex": "\\bbar\\b",
      "unicode": false
    },
    {
      "haystack": "faoa x",
      "matches": [
        [
          3,
          4
        ]
      ],
      "name": "wb8",
      "regex": "a\\b",
      "unicode": false
    },
    {
      "haystack": "bar x",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb9",
      "regex": "\\bbar",
      "unicode": false
    },
    {
      "haystack": "foo\nbar x",
      "matches": [
        [
          4,
          7
        ]
      ],
      "name": "wb10",
      "regex": "\\bbar",
      "unicode": false
    },
    {
      "haystack": "foobar",
      "matches": [
        [
          3,
          6
        ]
      ],
      "name": "wb11",
      "regex": "bar\\b",
      "unicode": false
    },
    {
      "haystack": "foobar\nxxx",
      "matches": [
        [
          3,
          6
        ]
      ],
      "name": "wb12",
      "regex": "bar\\b",
      "unicode": false
    },
    {
      "haystack": "foo",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb13",
      "regex": "(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "foo\n",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb14",
      "regex": "(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "foo",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb15",
      "regex": "\\b(?:foo|bar|[A-Z])",
      "unicode": false
    },
    {
      "haystack": "X",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb16",
      "regex": "\\b(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "XY",
      "matches": [],
      "name": "wb17",
      "regex": "\\b(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "bar",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb18",
      "regex": "\\b(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "foo",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb19",
      "regex": "\\b(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "foo\n",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb20",
      "regex": "\\b(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "ffoo bbar N x",
      "matches": [
        [
          10,
          11
        ]
      ],
      "name": "wb21",
      "regex": "\\b(?:foo|bar|[A-Z])\\b",
      "unicode": false
    },
    {
      "haystack": "fo",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "wb22",
      "regex": "\\b(?:fo|foo)\\b",
      "unicode": false
    },
    {
      "haystack": "foo",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb23",
      "regex": "\\b(?:fo|foo)\\b",
      "unicode": false
    },
    {
      "haystack": "",
      "matches": [],
      "name": "wb24",
      "regex": "\\b\\b",
      "unicode": false
    },
    {
      "haystack": "a",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ]
      ],
      "name": "wb25",
      "regex": "\\b\\b",
      "unicode": false
    },
    {
      "haystack": "",
      "matches": [],
      "name": "wb26",
      "regex": "\\b$",
      "unicode": false
    },
    {
      "haystack": "x",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "wb27",
      "regex": "\\b$",
      "unicode": false
    },
    {
      "haystack": "y x",
      "matches": [
        [
          3,
          3
        ]
      ],
      "name": "wb28",
      "regex": "\\b$",
      "unicode": false
    },
    {
      "haystack": "x",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb29",
      "regex": "(?-u:\\b).$"
    },
    {
      "haystack": "fo",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "wb30",
      "regex": "^\\b(?:fo|foo)\\b",
      "unicode": false
    },
    {
      "haystack": "foo",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "wb31",
      "regex": "^\\b(?:fo|foo)\\b",
      "unicode": false
    },
    {
      "haystack": "",
      "matches": [],
      "name": "wb32",
      "regex": "^\\b$",
      "unicode": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "wb33",
      "regex": "^\\b$",
      "unicode": false
    },
    {
      "haystack": "x",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb34",
      "regex": "^(?-u:\\b).$"
    },
    {
      "haystack": "x",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb35",
      "regex": "^(?-u:\\b).(?-u:\\b)$"
    },
    {
      "haystack": "",
      "matches": [],
      "name": "wb36",
      "regex": "^^^^^\\b$$$$$",
      "unicode": false
    },
    {
      "haystack": "x",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb37",
      "regex": "^^^^^(?-u:\\b).$$$$$"
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "wb38",
      "regex": "^^^^^\\b$$$$$",
      "unicode": false
    },
    {
      "haystack": "x",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb39",
      "regex": "^^^^^(?-u:\\b\\b\\b).(?-u:\\b\\b\\b)$$$$$"
    },
    {
      "haystack": "$$abc$$",
      "matches": [
        [
          2,
          5
        ]
      ],
      "name": "wb40",
      "regex": "(?-u:\\b).+(?-u:\\b)"
    },
    {
      "haystack": "a b c",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          2,
          2
        ],
        [
          3,
          3
        ],
        [
          4,
          4
        ],
        [
          5,
          5
        ]
      ],
      "name": "wb41",
      "regex": "\\b",
      "unicode": false
    },
    {
      "haystack": "zzz foo zzz",
      "matches": [
        [
          4,
          7
        ]
      ],
      "name": "wb42",
      "regex": "\\bfoo\\b",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "wb43",
      "regex": "\\b^",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "wb44",
      "regex": "$\\b",
      "unicode": false
    },
    {
      "haystack": "n foo xfoox that",
      "matches": [
        [
          7,
          10
        ]
      ],
      "name": "nb1",
      "regex": "\\Bfoo\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "faoa x",
      "matches": [
        [
          1,
          2
        ]
      ],
      "name": "nb2",
      "regex": "a\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "bar x",
      "matches": [],
      "name": "nb3",
      "regex": "\\Bbar",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foo\nbar x",
      "matches": [],
      "name": "nb4",
      "regex": "\\Bbar",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foobar",
      "matches": [],
      "name": "nb5",
      "regex": "bar\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foobar\nxxx",
      "matches": [],
      "name": "nb6",
      "regex": "bar\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foox",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "nb7",
      "regex": "(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foo\n",
      "matches": [],
      "name": "nb8",
      "regex": "(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "nb9",
      "regex": "\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb10",
      "regex": "\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foo",
      "matches": [],
      "name": "nb11",
      "regex": "\\B(?:foo|bar|[A-Z])",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "xXy",
      "matches": [
        [
          1,
          2
        ]
      ],
      "name": "nb12",
      "regex": "\\B(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "XY",
      "matches": [],
      "name": "nb13",
      "regex": "\\B(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "XYZ",
      "matches": [
        [
          1,
          2
        ]
      ],
      "name": "nb14",
      "regex": "\\B(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "abara",
      "matches": [
        [
          1,
          4
        ]
      ],
      "name": "nb15",
      "regex": "\\B(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "xfoo_",
      "matches": [
        [
          1,
          4
        ]
      ],
      "name": "nb16",
      "regex": "\\B(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "xfoo\n",
      "matches": [],
      "name": "nb17",
      "regex": "\\B(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foo bar vNX",
      "matches": [
        [
          9,
          10
        ]
      ],
      "name": "nb18",
      "regex": "\\B(?:foo|bar|[A-Z])\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "xfoo",
      "matches": [
        [
          1,
          3
        ]
      ],
      "name": "nb19",
      "regex": "\\B(?:fo|foo)\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "xfooo",
      "matches": [
        [
          1,
          4
        ]
      ],
      "name": "nb20",
      "regex": "\\B(?:foo|fo)\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "nb21",
      "regex": "\\B\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb22",
      "regex": "\\B\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "nb23",
      "regex": "\\B$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb24",
      "regex": "\\B$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "y x",
      "matches": [],
      "name": "nb25",
      "regex": "\\B$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb26",
      "regex": "\\B.$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "fo",
      "matches": [],
      "name": "nb27",
      "regex": "^\\B(?:fo|foo)\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "fo",
      "matches": [],
      "name": "nb28",
      "regex": "^\\B(?:fo|foo)\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "nb29",
      "regex": "^\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb30",
      "regex": "^\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "nb31",
      "regex": "^\\B\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb32",
      "regex": "^\\B\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "nb33",
      "regex": "^\\B$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb34",
      "regex": "^\\B$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb35",
      "regex": "^\\B.$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb36",
      "regex": "^\\B.\\B$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "nb37",
      "regex": "^^^^^\\B$$$$$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb38",
      "regex": "^^^^^\\B.$$$$$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "x",
      "matches": [],
      "name": "nb39",
      "regex": "^^^^^\\B$$$$$",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "«x",
      "matches": [
        [
          2,
          3
        ]
      ],
      "name": "unicode1",
      "regex": "\\bx\\b"
    },
    {
      "haystack": "«x",
      "matches": [
        [
          2,
          3
        ]
      ],
      "name": "unicode1-only-ascii",
      "regex": "\\bx\\b",
      "unicode": false
    },
    {
      "haystack": "x»",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "unicode2",
      "regex": "\\bx\\b"
    },
    {
      "haystack": "x»",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "unicode2-only-ascii",
      "regex": "\\bx\\b",
      "unicode": false
    },
    {
      "haystack": "áxβ",
      "matches": [],
      "name": "unicode3",
      "regex": "\\bx\\b"
    },
    {
      "haystack": "áxβ",
      "matches": [
        [
          2,
          3
        ]
      ],
      "name": "unicode3-only-ascii",
      "regex": "\\bx\\b",
      "unicode": false
    },
    {
      "haystack": "áxβ",
      "matches": [
        [
          2,
          3
        ]
      ],
      "name": "unicode4",
      "regex": "\\Bx\\B"
    },
    {
      "haystack": "áxβ",
      "matches": [],
      "name": "unicode4-only-ascii",
      "regex": "\\Bx\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "0񾽞",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ]
      ],
      "name": "unicode5",
      "regex": "\\b"
    },
    {
      "haystack": "0񾽞",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ]
      ],
      "name": "unicode5-only-ascii",
      "regex": "\\b",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "0\\xFF\\xFF\\xFF\\xFF",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ]
      ],
      "name": "unicode5-noutf8",
      "regex": "\\b",
      "unescape": true,
      "utf8": false
    },
    {
      "haystack": "0\\xFF\\xFF\\xFF\\xFF",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ]
      ],
      "name": "unicode5-noutf8-only-ascii",
      "regex": "\\b",
      "unescape": true,
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "0񾽞",
      "matches": [
        [
          5,
          5
        ]
      ],
      "name": "unicode5-not",
      "regex": "\\B"
    },
    {
      "haystack": "0񾽞",
      "matches": [
        [
          2,
          2
        ],
        [
          3,
          3
        ],
        [
          4,
          4
        ],
        [
          5,
          5
        ]
      ],
      "name": "unicode5-not-only-ascii",
      "regex": "\\B",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "0\\xFF\\xFF\\xFF\\xFF",
      "matches": [],
      "name": "unicode5-not-noutf8",
      "regex": "\\B",
      "unescape": true,
      "utf8": false
    },
    {
      "haystack": "0\\xFF\\xFF\\xFF\\xFF",
      "matches": [
        [
          2,
          2
        ],
        [
          3,
          3
        ],
        [
          4,
          4
        ],
        [
          5,
          5
        ]
      ],
      "name": "unicode5-not-noutf8-only-ascii",
      "regex": "\\B",
      "unescape": true,
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "foo 123 bar 456 quux 789",
      "matches": [
        [
          4,
          7
        ],
        [
          12,
          15
        ],
        [
          21,
          24
        ]
      ],
      "name": "unicode6",
      "regex": "\\b[0-9]+\\b"
    },
    {
      "haystack": "foo 123 bar a456 quux 789",
      "matches": [
        [
          4,
          7
        ],
        [
          22,
          25
        ]
      ],
      "name": "unicode7",
      "regex": "\\b[0-9]+\\b"
    },
    {
      "haystack": "foo 123 bar 456a quux 789",
      "matches": [
        [
          4,
          7
        ],
        [
          22,
          25
        ]
      ],
      "name": "unicode8",
      "regex": "\\b[0-9]+\\b"
    },
    {
      "anchored": true,
      "bounds": [
        1,
        2
      ],
      "haystack": "z%",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "alt-with-assertion-repetition",
      "regex": "(?:\\b|%)+"
    }
  ]
}