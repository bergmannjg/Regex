{
  "test": [
    {
      "haystack": "☃",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "literal1",
      "regex": "☃"
    },
    {
      "haystack": "☃",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "literal2",
      "regex": "☃+"
    },
    {
      "case-insensitive": true,
      "haystack": "☃",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "literal3",
      "regex": "☃+"
    },
    {
      "case-insensitive": true,
      "haystack": "δ",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "literal4",
      "regex": "Δ"
    },
    {
      "haystack": "6δ",
      "matches": [],
      "name": "wb-100",
      "regex": "\\d\\b"
    },
    {
      "haystack": "6 ",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb-200",
      "regex": "\\d\\b"
    },
    {
      "haystack": "6δ",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "wb-300",
      "regex": "\\d\\B"
    },
    {
      "haystack": "6 ",
      "matches": [],
      "name": "wb-400",
      "regex": "\\d\\B"
    },
    {
      "haystack": "☃",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class1",
      "regex": "[☃Ⅰ]+"
    },
    {
      "haystack": "Ⅰ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class2",
      "regex": "\\pN"
    },
    {
      "haystack": "Ⅰ1Ⅱ2",
      "matches": [
        [
          0,
          8
        ]
      ],
      "name": "class3",
      "regex": "\\pN+"
    },
    {
      "haystack": "abⅠ",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "class4",
      "regex": "\\PN+"
    },
    {
      "haystack": "abⅠ",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "class5",
      "regex": "[\\PN]+"
    },
    {
      "haystack": "abⅠ",
      "matches": [
        [
          2,
          5
        ]
      ],
      "name": "class6",
      "regex": "[^\\PN]+"
    },
    {
      "haystack": "ΛΘΓΔα",
      "matches": [
        [
          0,
          8
        ]
      ],
      "name": "class7",
      "regex": "\\p{Lu}+"
    },
    {
      "case-insensitive": true,
      "haystack": "ΛΘΓΔα",
      "matches": [
        [
          0,
          10
        ]
      ],
      "name": "class8",
      "regex": "\\p{Lu}+"
    },
    {
      "haystack": "ΛΘΓΔα",
      "matches": [
        [
          0,
          10
        ]
      ],
      "name": "class9",
      "regex": "\\pL+"
    },
    {
      "haystack": "ΛΘΓΔα",
      "matches": [
        [
          8,
          10
        ]
      ],
      "name": "class10",
      "regex": "\\p{Ll}+"
    },
    {
      "haystack": "dδd",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "perl1",
      "regex": "\\w+"
    },
    {
      "haystack": "⥡",
      "matches": [],
      "name": "perl2",
      "regex": "\\w+"
    },
    {
      "haystack": "⥡",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "perl3",
      "regex": "\\W+"
    },
    {
      "haystack": "1२३9",
      "matches": [
        [
          0,
          8
        ]
      ],
      "name": "perl4",
      "regex": "\\d+"
    },
    {
      "haystack": "Ⅱ",
      "matches": [],
      "name": "perl5",
      "regex": "\\d+"
    },
    {
      "haystack": "Ⅱ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "perl6",
      "regex": "\\D+"
    },
    {
      "haystack": " ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "perl7",
      "regex": "\\s+"
    },
    {
      "haystack": "☃",
      "matches": [],
      "name": "perl8",
      "regex": "\\s+"
    },
    {
      "haystack": "☃",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "perl9",
      "regex": "\\S+"
    },
    {
      "haystack": "Ａ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat1",
      "regex": "\\p{Cased_Letter}"
    },
    {
      "haystack": "❯",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat2",
      "regex": "\\p{Close_Punctuation}"
    },
    {
      "haystack": "⁀",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat3",
      "regex": "\\p{Connector_Punctuation}"
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "class-gencat4",
      "regex": "\\p{Control}"
    },
    {
      "haystack": "￡",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat5",
      "regex": "\\p{Currency_Symbol}"
    },
    {
      "haystack": "〰",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat6",
      "regex": "\\p{Dash_Punctuation}"
    },
    {
      "haystack": "𑓙",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat7",
      "regex": "\\p{Decimal_Number}"
    },
    {
      "haystack": "꙲",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat8",
      "regex": "\\p{Enclosing_Mark}"
    },
    {
      "haystack": "⸡",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat9",
      "regex": "\\p{Final_Punctuation}"
    },
    {
      "haystack": "󠁿",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat10",
      "regex": "\\p{Format}"
    },
    {
      "haystack": "⸜",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat11",
      "regex": "\\p{Initial_Punctuation}"
    },
    {
      "haystack": "Έ",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "class-gencat12",
      "regex": "\\p{Letter}"
    },
    {
      "haystack": "ↂ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat13",
      "regex": "\\p{Letter_Number}"
    },
    {
      "haystack": " ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat14",
      "regex": "\\p{Line_Separator}"
    },
    {
      "haystack": "ϛ",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "class-gencat15",
      "regex": "\\p{Lowercase_Letter}"
    },
    {
      "haystack": "󠇯",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat16",
      "regex": "\\p{Mark}"
    },
    {
      "haystack": "⋿",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat17",
      "regex": "\\p{Math}"
    },
    {
      "haystack": "𖭃",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat18",
      "regex": "\\p{Modifier_Letter}"
    },
    {
      "haystack": "🏿",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat19",
      "regex": "\\p{Modifier_Symbol}"
    },
    {
      "haystack": "𞥊",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat20",
      "regex": "\\p{Nonspacing_Mark}"
    },
    {
      "haystack": "⓿",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat21",
      "regex": "\\p{Number}"
    },
    {
      "haystack": "｟",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat22",
      "regex": "\\p{Open_Punctuation}"
    },
    {
      "haystack": "௉",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat23",
      "regex": "\\p{Other}"
    },
    {
      "haystack": "ꓷ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat24",
      "regex": "\\p{Other_Letter}"
    },
    {
      "haystack": "㉏",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat25",
      "regex": "\\p{Other_Number}"
    },
    {
      "haystack": "𞥞",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat26",
      "regex": "\\p{Other_Punctuation}"
    },
    {
      "haystack": "⅌",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat27",
      "regex": "\\p{Other_Symbol}"
    },
    {
      "haystack": " ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat28",
      "regex": "\\p{Paragraph_Separator}"
    },
    {
      "haystack": "􏿽",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat29",
      "regex": "\\p{Private_Use}"
    },
    {
      "haystack": "𑁍",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat30",
      "regex": "\\p{Punctuation}"
    },
    {
      "haystack": "　",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat31",
      "regex": "\\p{Separator}"
    },
    {
      "haystack": " ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat32",
      "regex": "\\p{Space_Separator}"
    },
    {
      "haystack": "𖽾",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat33",
      "regex": "\\p{Spacing_Mark}"
    },
    {
      "haystack": "⯈",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat34",
      "regex": "\\p{Symbol}"
    },
    {
      "haystack": "ῼ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat35",
      "regex": "\\p{Titlecase_Letter}"
    },
    {
      "haystack": "􏿿",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gencat36",
      "regex": "\\p{Unassigned}"
    },
    {
      "haystack": "Ꝋ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gencat37",
      "regex": "\\p{Uppercase_Letter}"
    },
    {
      "haystack": "⏩",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-emoji1",
      "regex": "\\p{Emoji}"
    },
    {
      "haystack": "🈚",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-emoji2",
      "regex": "\\p{emoji}"
    },
    {
      "haystack": "🩮",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-emoji3",
      "regex": "\\p{extendedpictographic}"
    },
    {
      "haystack": "🿽",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-emoji4",
      "regex": "\\p{extendedpictographic}"
    },
    {
      "haystack": "𑵆",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gcb1",
      "regex": "\\p{grapheme_cluster_break=prepend}"
    },
    {
      "haystack": "🇦",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gcb2",
      "regex": "\\p{gcb=regional_indicator}"
    },
    {
      "haystack": "🇧",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gcb3",
      "regex": "\\p{gcb=ri}"
    },
    {
      "haystack": "🇿",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-gcb4",
      "regex": "\\p{regionalindicator}"
    },
    {
      "haystack": "즉",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gcb5",
      "regex": "\\p{gcb=lvt}"
    },
    {
      "haystack": "‍",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-gcb6",
      "regex": "\\p{gcb=zwj}"
    },
    {
      "haystack": "צּ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-word-break1",
      "regex": "\\p{word_break=Hebrew_Letter}"
    },
    {
      "haystack": "צּ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-word-break2",
      "regex": "\\p{wb=hebrewletter}"
    },
    {
      "haystack": "＿",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-word-break3",
      "regex": "\\p{wb=ExtendNumLet}"
    },
    {
      "haystack": "　",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-word-break4",
      "regex": "\\p{wb=WSegSpace}"
    },
    {
      "haystack": "𞥐",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-word-break5",
      "regex": "\\p{wb=numeric}"
    },
    {
      "haystack": "ѩ",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "class-sentence-break1",
      "regex": "\\p{sentence_break=Lower}"
    },
    {
      "haystack": "ѩ",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "class-sentence-break2",
      "regex": "\\p{sb=lower}"
    },
    {
      "haystack": "｠",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-sentence-break3",
      "regex": "\\p{sb=Close}"
    },
    {
      "haystack": "🙷",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "class-sentence-break4",
      "regex": "\\p{sb=Close}"
    },
    {
      "haystack": "､",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "class-sentence-break5",
      "regex": "\\p{sb=SContinue}"
    }
  ]
}