{
  "test": [
    {
      "haystack": "ABC",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "1",
      "regex": "(?i)abc"
    },
    {
      "haystack": "Abc",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "2",
      "regex": "(?i)a(?-i)bc"
    },
    {
      "haystack": "ABC",
      "matches": [],
      "name": "3",
      "regex": "(?i)a(?-i)bc"
    },
    {
      "haystack": "A\n",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "4",
      "regex": "(?is)a."
    },
    {
      "haystack": "A\nab",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "5",
      "regex": "(?is)a.(?-is)a."
    },
    {
      "haystack": "A\na\n",
      "matches": [],
      "name": "6",
      "regex": "(?is)a.(?-is)a."
    },
    {
      "haystack": "A\na\n",
      "match-limit": 1,
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "7",
      "regex": "(?is)a.(?-is:a.)?"
    },
    {
      "haystack": "aa",
      "match-limit": 1,
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "8",
      "regex": "(?U)a+"
    },
    {
      "haystack": "aa",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "9",
      "regex": "(?U)a+?"
    },
    {
      "haystack": "aa",
      "matches": [
        [
          0,
          2
        ]
      ],
      "name": "10",
      "regex": "(?U)(?-U)a+"
    },
    {
      "haystack": "123\n456\n789",
      "matches": [
        [
          0,
          11
        ]
      ],
      "name": "11",
      "regex": "(?m)(?:^\\d+$\\n?)+",
      "unicode": false
    }
  ]
}