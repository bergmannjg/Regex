{
  "test": [
    {
      "anchored": true,
      "haystack": "abcabcabc",
      "matches": [
        [
          [
            0,
            9
          ],
          [
            6,
            9
          ]
        ]
      ],
      "name": "greedy",
      "regex": "(abc)+"
    },
    {
      "anchored": true,
      "haystack": "abcabcabc",
      "matches": [
        [
          [
            0,
            3
          ],
          [
            0,
            3
          ]
        ],
        [
          [
            3,
            6
          ],
          [
            3,
            6
          ]
        ],
        [
          [
            6,
            9
          ],
          [
            6,
            9
          ]
        ]
      ],
      "name": "greedy-earliest",
      "regex": "(abc)+",
      "search-kind": "earliest"
    },
    {
      "anchored": true,
      "haystack": "abcabcabc",
      "matches": [
        [
          [
            0,
            3
          ],
          [
            0,
            3
          ]
        ],
        [
          [
            3,
            6
          ],
          [
            3,
            6
          ]
        ],
        [
          [
            6,
            9
          ],
          [
            6,
            9
          ]
        ]
      ],
      "name": "nongreedy",
      "regex": "(abc)+?"
    },
    {
      "anchored": true,
      "haystack": "abcabcabc",
      "match-kind": "all",
      "matches": [
        [
          [
            0,
            9
          ],
          [
            6,
            9
          ]
        ]
      ],
      "name": "nongreedy-all",
      "regex": "(abc)+?"
    },
    {
      "anchored": true,
      "haystack": "βββ☃",
      "matches": [
        [
          0,
          6
        ]
      ],
      "name": "word-boundary-unicode-01",
      "regex": "\\b\\w+\\b"
    },
    {
      "anchored": true,
      "haystack": "abcβ",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "word-boundary-nounicode-01",
      "regex": "\\b\\w+\\b",
      "unicode": false
    },
    {
      "anchored": true,
      "haystack": "abc",
      "matches": [],
      "name": "no-match-at-start",
      "regex": ".c"
    },
    {
      "anchored": true,
      "bounds": [
        1,
        4
      ],
      "haystack": "aabc",
      "matches": [],
      "name": "no-match-at-start-bounds",
      "regex": ".c"
    },
    {
      "anchored": true,
      "haystack": "abcz",
      "matches": [],
      "name": "no-match-at-start-reverse-inner",
      "regex": ".c[a-z]"
    },
    {
      "anchored": true,
      "bounds": [
        1,
        5
      ],
      "haystack": "aabcz",
      "matches": [],
      "name": "no-match-at-start-reverse-inner-bounds",
      "regex": ".c[a-z]"
    },
    {
      "anchored": true,
      "haystack": "abcz",
      "matches": [],
      "name": "no-match-at-start-reverse-anchored",
      "regex": ".c[a-z]$"
    },
    {
      "anchored": true,
      "bounds": [
        1,
        5
      ],
      "haystack": "aabcz",
      "matches": [],
      "name": "no-match-at-start-reverse-anchored-bounds",
      "regex": ".c[a-z]$"
    }
  ]
}