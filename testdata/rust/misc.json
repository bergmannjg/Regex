{
  "test": [
    {
      "haystack": "a",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "ascii-literal",
      "regex": "a"
    },
    {
      "haystack": "z",
      "matches": [],
      "name": "ascii-literal-not",
      "regex": "a"
    },
    {
      "anchored": true,
      "haystack": "a",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "ascii-literal-anchored",
      "regex": "a"
    },
    {
      "anchored": true,
      "haystack": "z",
      "matches": [],
      "name": "ascii-literal-anchored-not",
      "regex": "a"
    },
    {
      "haystack": "foo\nbar\nbaz",
      "matches": [
        [
          4,
          7
        ]
      ],
      "name": "anchor-start-end-line",
      "regex": "(?m)^bar$"
    },
    {
      "haystack": "abc",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "prefix-literal-match",
      "regex": "^abc"
    },
    {
      "haystack": "abc",
      "matches": [
        [
          0,
          3
        ]
      ],
      "name": "prefix-literal-match-ascii",
      "regex": "^abc",
      "unicode": false,
      "utf8": false
    },
    {
      "haystack": "zabc",
      "matches": [],
      "name": "prefix-literal-no-match",
      "regex": "^abc"
    },
    {
      "haystack": "xxxxxab",
      "matches": [],
      "name": "one-literal-edge",
      "regex": "abc"
    },
    {
      "haystack": "a",
      "matches": [
        [
          0,
          1
        ]
      ],
      "name": "terminates",
      "regex": "a$"
    },
    {
      "haystack": "abcd",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "suffix-100",
      "regex": ".*abcd"
    },
    {
      "haystack": "abcd",
      "matches": [
        [
          0,
          4
        ]
      ],
      "name": "suffix-200",
      "regex": ".*(?:abcd)+"
    },
    {
      "haystack": "abcdabcd",
      "matches": [
        [
          0,
          8
        ]
      ],
      "name": "suffix-300",
      "regex": ".*(?:abcd)+"
    },
    {
      "haystack": "abcdxabcd",
      "matches": [
        [
          0,
          9
        ]
      ],
      "name": "suffix-400",
      "regex": ".*(?:abcd)+"
    },
    {
      "haystack": "abcdxabcd",
      "matches": [
        [
          0,
          9
        ]
      ],
      "name": "suffix-500",
      "regex": ".*x(?:abcd)+"
    },
    {
      "haystack": "abcdxabcd",
      "matches": [
        [
          4,
          9
        ]
      ],
      "name": "suffix-600",
      "regex": "[^abcd]*x(?:abcd)+"
    }
  ]
}