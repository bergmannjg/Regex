{
  "test": [
    {
      "haystack": "a",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-ascii-010",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "a ",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-ascii-020",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": " a ",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-start-ascii-030",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "",
      "matches": [],
      "name": "word-start-ascii-040",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-ascii-050",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "𝛃",
      "matches": [],
      "name": "word-start-ascii-060",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-start-ascii-060-bounds",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": " 𝛃 ",
      "matches": [],
      "name": "word-start-ascii-070",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [],
      "name": "word-start-ascii-080",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          4,
          4
        ]
      ],
      "name": "word-start-ascii-090",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-ascii-110",
      "regex": "\\b{start}",
      "unicode": false
    },
    {
      "haystack": "a",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-end-ascii-010",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "a ",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-end-ascii-020",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": " a ",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "word-end-ascii-030",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "",
      "matches": [],
      "name": "word-end-ascii-040",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "word-end-ascii-050",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "𝛃",
      "matches": [],
      "name": "word-end-ascii-060",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-end-ascii-060-bounds",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": " 𝛃 ",
      "matches": [],
      "name": "word-end-ascii-070",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [],
      "name": "word-end-ascii-080",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          5,
          5
        ]
      ],
      "name": "word-end-ascii-090",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-end-ascii-110",
      "regex": "\\b{end}",
      "unicode": false
    },
    {
      "haystack": "a",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-unicode-010",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "a ",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-unicode-020",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": " a ",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-start-unicode-030",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "",
      "matches": [],
      "name": "word-start-unicode-040",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "ab",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-unicode-050",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "𝛃",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-unicode-060",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-start-unicode-060-bounds",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": " 𝛃 ",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-start-unicode-070",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-unicode-080",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-unicode-090",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-unicode-110",
      "regex": "\\b{start}",
      "unicode": true
    },
    {
      "haystack": "a",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-end-unicode-010",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "a ",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-end-unicode-020",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": " a ",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "word-end-unicode-030",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "",
      "matches": [],
      "name": "word-end-unicode-040",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "ab",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "word-end-unicode-050",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "𝛃",
      "matches": [
        [
          4,
          4
        ]
      ],
      "name": "word-end-unicode-060",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-end-unicode-060-bounds",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": " 𝛃 ",
      "matches": [
        [
          5,
          5
        ]
      ],
      "name": "word-end-unicode-070",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [
        [
          4,
          4
        ]
      ],
      "name": "word-end-unicode-080",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          5,
          5
        ]
      ],
      "name": "word-end-unicode-090",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          5,
          5
        ]
      ],
      "name": "word-end-unicode-110",
      "regex": "\\b{end}",
      "unicode": true
    },
    {
      "haystack": "a",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-ascii-010",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "a ",
      "matches": [
        [
          0,
          0
        ],
        [
          2,
          2
        ]
      ],
      "name": "word-start-half-ascii-020",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": " a ",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          3,
          3
        ]
      ],
      "name": "word-start-half-ascii-030",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-ascii-040",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-ascii-050",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "𝛃",
      "matches": [
        [
          0,
          0
        ],
        [
          4,
          4
        ]
      ],
      "name": "word-start-half-ascii-060",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "𝛃",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          2,
          2
        ],
        [
          3,
          3
        ],
        [
          4,
          4
        ]
      ],
      "name": "word-start-half-ascii-060-noutf8",
      "regex": "\\b{start-half}",
      "unicode": false,
      "utf8": false
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-start-half-ascii-060-bounds",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": " 𝛃 ",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          5,
          5
        ],
        [
          6,
          6
        ]
      ],
      "name": "word-start-half-ascii-070",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [
        [
          0,
          0
        ],
        [
          4,
          4
        ],
        [
          8,
          8
        ]
      ],
      "name": "word-start-half-ascii-080",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          0,
          0
        ],
        [
          4,
          4
        ]
      ],
      "name": "word-start-half-ascii-090",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          0,
          0
        ],
        [
          5,
          5
        ]
      ],
      "name": "word-start-half-ascii-110",
      "regex": "\\b{start-half}",
      "unicode": false
    },
    {
      "haystack": "a",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-end-half-ascii-010",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "a ",
      "matches": [
        [
          1,
          1
        ],
        [
          2,
          2
        ]
      ],
      "name": "word-end-half-ascii-020",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": " a ",
      "matches": [
        [
          0,
          0
        ],
        [
          2,
          2
        ],
        [
          3,
          3
        ]
      ],
      "name": "word-end-half-ascii-030",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-end-half-ascii-040",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "ab",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "word-end-half-ascii-050",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "𝛃",
      "matches": [
        [
          0,
          0
        ],
        [
          4,
          4
        ]
      ],
      "name": "word-end-half-ascii-060",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-end-half-ascii-060-bounds",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": " 𝛃 ",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          5,
          5
        ],
        [
          6,
          6
        ]
      ],
      "name": "word-end-half-ascii-070",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [
        [
          0,
          0
        ],
        [
          4,
          4
        ],
        [
          8,
          8
        ]
      ],
      "name": "word-end-half-ascii-080",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          0,
          0
        ],
        [
          5,
          5
        ]
      ],
      "name": "word-end-half-ascii-090",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          1,
          1
        ],
        [
          5,
          5
        ]
      ],
      "name": "word-end-half-ascii-110",
      "regex": "\\b{end-half}",
      "unicode": false
    },
    {
      "haystack": "a",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-unicode-010",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "a ",
      "matches": [
        [
          0,
          0
        ],
        [
          2,
          2
        ]
      ],
      "name": "word-start-half-unicode-020",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": " a ",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          3,
          3
        ]
      ],
      "name": "word-start-half-unicode-030",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-unicode-040",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "ab",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-unicode-050",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "𝛃",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-unicode-060",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-start-half-unicode-060-bounds",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": " 𝛃 ",
      "matches": [
        [
          0,
          0
        ],
        [
          1,
          1
        ],
        [
          6,
          6
        ]
      ],
      "name": "word-start-half-unicode-070",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [
        [
          0,
          0
        ],
        [
          8,
          8
        ]
      ],
      "name": "word-start-half-unicode-080",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-unicode-090",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-start-half-unicode-110",
      "regex": "\\b{start-half}",
      "unicode": true
    },
    {
      "haystack": "a",
      "matches": [
        [
          1,
          1
        ]
      ],
      "name": "word-end-half-unicode-010",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": "a ",
      "matches": [
        [
          1,
          1
        ],
        [
          2,
          2
        ]
      ],
      "name": "word-end-half-unicode-020",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": " a ",
      "matches": [
        [
          0,
          0
        ],
        [
          2,
          2
        ],
        [
          3,
          3
        ]
      ],
      "name": "word-end-half-unicode-030",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": "",
      "matches": [
        [
          0,
          0
        ]
      ],
      "name": "word-end-half-unicode-040",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": "ab",
      "matches": [
        [
          2,
          2
        ]
      ],
      "name": "word-end-half-unicode-050",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": "𝛃",
      "matches": [
        [
          4,
          4
        ]
      ],
      "name": "word-end-half-unicode-060",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "bounds": [
        2,
        3
      ],
      "haystack": "𝛃",
      "matches": [],
      "name": "word-end-half-unicode-060-bounds",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": " 𝛃 ",
      "matches": [
        [
          0,
          0
        ],
        [
          5,
          5
        ],
        [
          6,
          6
        ]
      ],
      "name": "word-end-half-unicode-070",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": "𝛃𐆀",
      "matches": [
        [
          4,
          4
        ],
        [
          8,
          8
        ]
      ],
      "name": "word-end-half-unicode-080",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": "𝛃b",
      "matches": [
        [
          5,
          5
        ]
      ],
      "name": "word-end-half-unicode-090",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "haystack": "b𝛃",
      "matches": [
        [
          5,
          5
        ]
      ],
      "name": "word-end-half-unicode-110",
      "regex": "\\b{end-half}",
      "unicode": true
    },
    {
      "bounds": [
        4,
        7
      ],
      "haystack": "ABC\\rabc",
      "matches": [
        [
          4,
          7
        ]
      ],
      "name": "word-start-half-ascii-carriage",
      "regex": "\\b{start-half}[a-z]+",
      "unescape": true
    },
    {
      "bounds": [
        4,
        7
      ],
      "haystack": "ABC\\nabc",
      "matches": [
        [
          4,
          7
        ]
      ],
      "name": "word-start-half-ascii-linefeed",
      "regex": "\\b{start-half}[a-z]+",
      "unescape": true
    },
    {
      "bounds": [
        4,
        7
      ],
      "haystack": "ABC!abc",
      "line-terminator": "!",
      "matches": [
        [
          4,
          7
        ]
      ],
      "name": "word-start-half-ascii-customlineterm",
      "regex": "\\b{start-half}[a-z]+",
      "unescape": true
    }
  ]
}